using System.IO;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using SchoolLocker.Core.Contracts;
using SchoolLocker.Persistence;
using Swashbuckle.AspNetCore.Swagger;
using Microsoft.Extensions.Hosting;
using System;
using System.Reflection;
using Microsoft.OpenApi.Models;

namespace SchoolLocker.Web
{
  public class Startup
  {
    public Startup(IConfiguration configuration)
    {
      Configuration = configuration;
    }

    public IConfiguration Configuration { get; }

    // This method gets called by the runtime. Use this method to add services to the container.
    public void ConfigureServices(IServiceCollection services)
    {
      services.AddScoped<IUnitOfWork, UnitOfWork>(serviceProvider =>
          new UnitOfWork());

      services.AddSwaggerGen(configuration =>
      {
        configuration.SwaggerDoc(
            "v1", new OpenApiInfo()
            {
              Title = "SchoolLocker API",
              Version = "v1",
              Contact = new OpenApiContact()
              {
                Name = "Josef Fürlinger",
                Email = "j.fuerlinger@htl-leonding.ac.at",
                Url = new Uri("https://github.com/jfuerlinger")
              }
            });

        //Locate the XML file being generated by ASP.NET...
        var xmlFile = $"{Assembly.GetExecutingAssembly().GetName().Name}.xml";
        var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);

        //... and tell Swagger to use those XML comments.
        configuration.IncludeXmlComments(xmlPath);
      });

      services.AddRazorPages();
      services.AddMvc();
    }

    // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
    {
      if (env.IsDevelopment())
      {
        app.UseDeveloperExceptionPage();
      }
      else
      {
        app.UseExceptionHandler("/Error");
        app.UseHsts();
      }

      app.UseHttpsRedirection();
      app.UseStaticFiles();

      // Enable middleware to serve generated Swagger as a JSON endpoint
      app.UseSwagger();

      // Enable middleware to serve swagger-ui (HTML, JS, CSS, etc.)
      // specifying the Swagger JSON endpoint
      app.UseSwaggerUI(c => c.SwaggerEndpoint("v1/swagger.json", "SchoolLocker API"));


      app.UseRouting();

      app.UseAuthorization();

      app.UseEndpoints(endpoints =>
      {
        endpoints.MapRazorPages();
      });
    }
  }
}
